#include "EulerUtility.h"

class Euler
{
public:
    int SumOfMultiplesOf3And5Ceiling1000();
    int SumOfEvenFibonacciNumbersCeiling4m();
    llui LargestPrimeFactor();
    int LargestPalindromeFrom3DigitProduct();
    int DivisibleBy1To20();
    int DifferenceSumOfSquaresSquareOfSum100();
    int Get10001stPrime();
    llui FindGreatestProductOf13AdjacentDigits();
    int SpecialPythagoreanTriplet();
    llui SumOfPrimesUnder2m();
    int LargestProductInGrid();
    llui TriangleNoWithGreaterThan500Divisors();
    std::string LargeSum();
    llui CollatzConjecture();
    //BigInteger LatticePaths();
    int DigitSum();
    int LetterCounter();
    int MaximumPathSum();
    int SundayCount();
    llui FactorialDigitSum();
    int AmicableNumbers();
    llui NameScores();
    int NonAbundantSums();
    std::string LexicographicPermutations();
    int ThousandDigitFibonacciNumber();
    int ReciprocalCycles();
    int QuadraticPrimes();
    long SpiralDiagonals();
    int DistinctPowers();
    long DigitFifthPowers();
    int CoinSums();
    int PanDigitalProducts();
    int DigitCancellingFractionsDenominator();
    llui DigitFactorials();
    int NoOfCircularPrimes();
    llui DoubleBasedPalindromes();
    llui TruncatablePrimes();
    int PanDigitalMultiples();
    int MaximumRightAngledTriangles();
    int ChampernowneConstant();
    int PanDigitalPrime();
    int CodedTriangleNumbers();
    //BigInteger SubStringDivisibility();
    int MinimizedPentagonalDifference();
    llui TriangularPentagonalHexagonal();
    llui GoldbachsOtherConjecture();
    int DistinctPrimeFactors();
    //BigInteger SelfPowers();
    std::string PrimePermutations();
    int ConsecutivePrimeSum();
    int PrimeDigitReplacements();
    int PermutedMultiples();
    int CombinatoricSelections();
    int PokerHands();
    //BigInteger LychrelNumbers();
    int PowerfulDigitSum();
    int SquareRootConvergents();
    ll SpiralPrimes();
    int xorDecryption();
    int PrimePairSets();
    int CyclicFigurateNumbers();
    llui CubicPermutations();
    int PowerfulDigitCounts();
    int OddPeriodSquareRoots();
    int ConvergentsOfE();
    int Diophantine();
    std::string Magic5GonRing();
    int EulerTotient();
    int TotientPermutation();
    int OrderedFractions();
    llui CountingFractions();
    llui CountingRangedFractions();
    int DigitFactorialChains();
    int UniquePerimeterRightAngledTriangles();
    int CountingSums();
    int PrimeSummations();
    llui CoinPartitions();
    std::string PasscodeDerivation();
    int SquareRootDigitalExpansion();
};
